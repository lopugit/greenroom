
module.exports = async function(args){
	let smarts = require('smarts')()
	let Rates = require('sentience')['rates']

	// convert all USD prices to AUD
	let rates = await Rates()
	let prices = smarts.gosmart(args, 'obj.prices', [])
	let round = 100
	let	minimumPrice = {
		values: {
			AUD: Infinity
		}
	}
	let nativePriceName = 'growtime.com.au marked up price'
	let nativePrice = undefined
	
	// convert USD value to AUD for all prices
	// find native price if it exists
	// find minimum price that isn't a native price
	for(let price of prices){
		if(price.values['USD']){
			// check if exchange rate is available
			if(rates[`USD_AUD`] && rates[`USD_AUD`].val){
				// update AUD value with latest exchange rate
				price.values['AUD'] = Math.ceil(rates[`USD_AUD`].val * price.values['USD'])
			}
		}
		// check if price is minimum
		if(price.name !== nativePriceName && price.values['AUD'] && price.values['AUD'] < minimumPrice.values['AUD']){
			minimumPrice = price
		}
		// check for native price object
		if(price.name == nativePriceName){
			nativePrice = price
		}
	}
	if(!nativePrice){
		nativePrice = {
			name: nativePriceName,
			values: {
				'AUD': undefined
			}
		}
		prices.push(nativePrice)
	}
	// update native price with marked up minimum remote price
	let factor = 1.2
	if(minimumPrice.values['AUD'] < 20){
		factor = 1.39
	} else if(minimumPrice.values['AUD'] < 30){
		factor = 1.35
	} else if(minimumPrice.values['AUD'] < 40){
		factor = 1.32
	} else if(minimumPrice.values['AUD'] < 60){
		factor = 1.25
	} else if(minimumPrice.values['AUD'] < 80){
		factor = 1.20
	} else if(minimumPrice.values['AUD'] < 200){
		factor = 1.18
	} else if(minimumPrice.values['AUD'] < 400){
		factor = 1.16
	} else if(minimumPrice.values['AUD'] < 500){
		factor = 1.15
	} else if(minimumPrice.values['AUD'] < 600){
		factor = 1.15
	} else if(minimumPrice.values['AUD'] < 600){
		factor = 1.15
	} else if(minimumPrice.values['AUD'] < 800){
		factor = 1.14
	} else if(minimumPrice.values['AUD'] < 900){
		factor = 1.125
	} else if(minimumPrice.values['AUD'] < 1100){
		factor = 1.12
	} else if(minimumPrice.values['AUD'] < 1200){
		factor = 1.1
	} else if(minimumPrice.values['AUD'] < 1300){
		factor = 1.09
	} else if(minimumPrice.values['AUD'] < 1400){
		factor = 1.08
	} else if(minimumPrice.values['AUD'] < 1500){
		factor = 1.07
	} else if(minimumPrice.values['AUD'] < 1600){
		factor = 1.06
	} else if(minimumPrice.values['AUD'] < 1700){
		factor = 1.057
	} else if(minimumPrice.values['AUD'] < 1900){
		factor = 1.055
	} else if(minimumPrice.values['AUD'] < 2000){
		factor = 1.052
	} else if(minimumPrice.values['AUD'] >= 2000){
		factor = 1.05
	}
	
	let value = minimumPrice.values['AUD'] * factor
	
	// round the value to the nearest 5 or 9 dollar increment
	if(value < 10){
		value = Math.ceil(value)
	} else if(value % 10 < 5){
		value = Math.round(value/10)*10
	} else if (value % 10 == 5){
		value = Math.round(value/10)*10 - 5
	} else {
		value = Math.round(value/10)*10 - 1
	}

	nativePrice.values['AUD'] = value
	nativePrice.source = minimumPrice.source

	return args.obj
}