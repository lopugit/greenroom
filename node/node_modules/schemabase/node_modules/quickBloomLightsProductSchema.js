let productSchema = require('./product.js')
let functions = require('functions')
let defaultParser = functions['defaultParser.js']
let smarts = require('smarts')()

function priceParser(args){
	var ret = undefined
	if(args.val && typeof args.val == 'string'){
		args.val = args.val.replace(/[\$,]/ig, "")
		// let currency = args.val.slice(0, 2)+'D'
		ret = {
			name: args.property.name,
			values: {
				'AUD': parseFloat(args.val)
			},
			source: 'quick bloom lights'
		}
	}
	return ret
}
function typeParser(args1){
	return function(args){
		return args1.ret
	}
}

module.exports = function(){
	return {
		"path" : "growtime/"+smarts.getsmart(global, 'env.level', 'dev')+"/products",
		schema: productSchema,
		"properties": [
			{
				path: 'title',
				html: {
					selector: ".product-thumbnail__title",
					attribute: 'innerHTML'
				}
			},
			{
				path: 'names',
				html: {
				}
			},
			{
				path: 'stock',
				html: {
					selector: ".sold-out",
					attribute: 'innerText',
				}
			},
			{
				path: 'type',
				html: {
					page: true,
					selector: ".collection__title",
				}
			},
			{
				path: 'types',
				html: {
					properties: [
						{
							parser: typeParser({
								ret: 'product'
							})
						},
						{
							html: {
								page: true,
								selector: ".collection__title",
							}			
						}
					]
				}
			},
			{
				path: 'subtitle',
				html: {
					selector: "",
					attribute: "",
				}
			},
			{
				path: 'short description',
				html: {
					selector: "",
					attribute: 'innerHTML',
				}
			},
			{
				path: 'prices',
				html: {
					properties: [
						{
							name: 'quick bloom lights old price',
							parser: priceParser,
							html: {
								selector: "div > span > span.was-price > span.money",
								attribute: 'innerHTML',
							}
						},
						{
							name: 'quick bloom lights regular price',
							parser: priceParser,
							html: {
								selector: "div > span > span.money",
								attribute: 'innerHTML',
							}
						},
						{
							name: 'quick bloom lights sale price',
							parser: priceParser,
							html: {
								selector: "div > span.sale > span.money",
								attribute: 'innerHTML',
							}
						},
					],
				}
			},
			{
				path: 'thumbnail',
				html: {
					selector: ".product__imageContainer > a > div > img",
					attribute: 'src',
				}
			},
			{
				path: 'images',
				html: {
				}
			},
			{
				path: 'source',
				html: {
					page: true,
					selector: "#header > section > div > div > div.header__brand > a > div > img",
					attribute: 'alt',
				},
				parser(args){
					return args.val.replace(/ Logo/g, '')
				}
			}
		],
		methods: {
			pricesai: functions['productpricesai.js']
		},
		ai: functions['productai.js']
	}
}