let sites = require('sites')
let smarts = require('smarts')()
let functions = require('functions')
let secrets = require('secrets')
let uri = functions['uri.js'](secrets.mongoDB)
let { DateTime } = require('luxon')

global.logger.log("[muppets][info] Connecting via monk to URI "+uri)
let monk = require('monk')(uri)

module.exports = {
	schedule: {
		minutes: 10
	},
	name: "Delete Old Products",
	enabled: true,
	run: async function (args){
		global.logger.log(`[muppets][info] Deleting old products`)
		try {
			for (let site of sites) {
				try {
					let pages = site.pages
					let pageIds = Object.keys(site.pages)
					for (let pageId of pageIds){
						try {
							let collection = pages[pageId].schema.path
							let timeNow = DateTime.now()
							let oldThreshold = timeNow.minus({ minutes: 30 })
							try {
								global.logger.log("[muppets][deleteOld][info] Deleting all old products from", collection)
								let monkCollection = monk.get(collection)
								let count = await monkCollection.remove({
									$or: [
										{
											updated: {
												$lt: oldThreshold.toSeconds()
											},
										},
										{
											updated: {
												$exists: false
											}
										}
									]
								})
								global.logger.log("[muppets][deleteOld][info] Deleted", count.result.n)
							} catch (err) {
								global.logger.error("[muppets][deleteOld][error]", err)
							}
						} catch (err) {
							global.logger.error("[muppets][deleteOld][error]", err)
						}
					}
				} catch (err) {
					global.logger.error("[muppets][deleteOld][error]", err)
				}
			}
		} catch (err) {
			global.logger.error("[muppets][deleteOld][error]", err)
		}
	}
}
