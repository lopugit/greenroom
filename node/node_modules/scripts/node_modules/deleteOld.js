let sites = require('sites')
let smarts = require('smarts')()
let functions = require('functions')
let secrets = require('secrets')
let uri = functions['uri.js'](secrets.mongoDB)
let { DateTime } = require('luxon')

global.logger.log("[greenroom][info] Connecting via monk to URI "+uri)
let monk = require('monk')(uri)

let toExport = {
	ageThreshold: 2,
	schedule: {
		minutes: 6
	},
	name: "Delete Old Products",
	enabled: true,
	run: async function (args){
		global.logger.log(`[greenroom][info] Deleting old products`)
		try {
			for (let site of sites) {
				try {
					let pages = site.pages
					let pageIds = Object.keys(site.pages)
					let done = []
					for (let pageId of pageIds){
						try {
							let collection = pages[pageId].schema.path
							if (!done.includes(collection)) {
								done.push(collection)
								let timeNow = DateTime.now()
								let oldThreshold = timeNow.minus({ minutes: toExport.ageThreshold })
								try {
									global.logger.log("[greenroom][deleteOld][info] Deleting all old products from", collection)
									let monkCollection = monk.get(collection)
									let count = await monkCollection.remove({
										$or: [
											{
												updated: {
													$lt: oldThreshold.toSeconds()
												},
											},
											{
												updated: {
													$exists: false
												}
											}
										]
									})
									global.logger.log("[greenroom][deleteOld][info] Deleted", count.result.n)
								} catch (err) {
									global.logger.error("[greenroom][deleteOld][error]", err)
								}
							}
						} catch (err) {
							global.logger.error("[greenroom][deleteOld][error]", err)
						}
					}
				} catch (err) {
					global.logger.error("[greenroom][deleteOld][error]", err)
				}
			}
		} catch (err) {
			global.logger.error("[greenroom][deleteOld][error]", err)
		}
	}
}

module.exports = toExport