let { marsHydroProductSchema } = require('schemabase')()
let s = require('smarts')()
let pages = {
	"led growlights": {
		userAgent: "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36",
		urls: [["https://www.mars-hydro.com/","led-grow-light","?","limit=25"]],
		createUrl(args){
			var ret = ''
			if(args.self){
				var args = args || {}
				var n = args.n || 0
				args.self.urls[n].forEach(part=>{
					ret += part
				})
			}
			return ret
		},
		list: {
			selector: '#products-list'
		},
		"schema": s.mod(marsHydroProductSchema(), (schema)=>{
			s.pushThings({
				options: [
					{
						parser: (val)=>{ return 'led growlight' }
					},
					{
						parser: (val)=>{ return 'led growlights' }
					},
					{
						parser: (val)=>{ return 'growlight' }
					},
					{
						parser: (val)=>{ return 'growlights' }
					},
					{
						parser: (val)=>{ return 'led grow light' }
					},
					{
						parser: (val)=>{ return 'led grow lights' }
					},
					{
						parser: (val)=>{ return 'grow light' }
					},
					{
						parser: (val)=>{ return 'grow lights' }
					},
					{
						parser: (val)=>{ return 'led' }
					},
					{
						parser: (val)=>{ return 'leds' }
					},
					{
						parser: (val)=>{ return 'mars led growlight' }
					},
					{
						parser: (val)=>{ return 'mars led growlights' }
					},
					{
						parser: (val)=>{ return 'mars growlight' }
					},
					{
						parser: (val)=>{ return 'mars growlights' }
					},
					{
						parser: (val)=>{ return 'mars led grow light' }
					},
					{
						parser: (val)=>{ return 'mars led grow lights' }
					},
					{
						parser: (val)=>{ return 'mars grow light' }
					},
					{
						parser: (val)=>{ return 'mars grow lights' }
					},
					{
						parser: (val)=>{ return 'mars led' }
					},
					{
						parser: (val)=>{ return 'mars leds' }
					},
				],
				list: s.getsmart(
					s.getThing({
						option: {
							path: 'types'
						},
						list: s.getsmart(schema, 'properties', undefined),
						keys: ['path']
					}),
					'html.properties',
					undefined
				)
			})
			return schema
		})
	},
	"grow tents": {
		userAgent: "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36",
		urls: [["https://www.mars-hydro.com/","grow-tent","?","limit=25"]],
		createUrl(args){
			var ret = ''
			if(args.self){
				var args = args || {}
				var n = args.n || 0
				args.self.urls[n].forEach(part=>{
					ret += part
				})
			}
			return ret
		},
		list: {
			selector: '#products-list'
		},
		"schema": s.mod(marsHydroProductSchema(), (schema)=>{
			s.pushThings({
				options: [
					{
						parser: (val)=>{ return 'grow tent' }
					},
					{
						parser: (val)=>{ return 'grow tents' }
					},
					{
						parser: (val)=>{ return 'grow tent' }
					},
					{
						parser: (val)=>{ return 'grow tents' }
					},
					{
						parser: (val)=>{ return 'tent' }
					},
					{
						parser: (val)=>{ return 'tents' }
					},
					{
						parser: (val)=>{ return 'mars grow tent' }
					},
					{
						parser: (val)=>{ return 'mars grow tents' }
					},
					{
						parser: (val)=>{ return 'mars grow tent' }
					},
					{
						parser: (val)=>{ return 'mars grow tents' }
					},
					{
						parser: (val)=>{ return 'mars tent' }
					},
					{
						parser: (val)=>{ return 'mars tents' }
					},
					{
						parser: (val)=>{ return 'grow room' }
					},
					{
						parser: (val)=>{ return 'grow rooms' }
					},
					{
						parser: (val)=>{ return 'grow room' }
					},
					{
						parser: (val)=>{ return 'grow rooms' }
					},
					{
						parser: (val)=>{ return 'room' }
					},
					{
						parser: (val)=>{ return 'rooms' }
					},
					{
						parser: (val)=>{ return 'mars grow room' }
					},
					{
						parser: (val)=>{ return 'mars grow rooms' }
					},
					{
						parser: (val)=>{ return 'mars grow room' }
					},
					{
						parser: (val)=>{ return 'mars grow rooms' }
					},
					{
						parser: (val)=>{ return 'mars room' }
					},
					{
						parser: (val)=>{ return 'mars tents' }
					},
				],
				list: s.getsmart(
					s.getThing({
						option: {
							path: 'types'
						},
						list: s.getsmart(schema, 'properties', undefined),
						keys: ['path']
					}),
					'html.properties',
					undefined
				)
			})
			return schema
		})
	},
	"grow kits": {
		userAgent: "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36",
		urls: [["https://www.mars-hydro.com/","grow-kits-combo","?","limit=25"]],
		createUrl(args){
			var ret = ''
			if(args.self){
				var args = args || {}
				var n = args.n || 0
				args.self.urls[n].forEach(part=>{
					ret += part
				})
			}
			return ret
		},
		list: {
			selector: '#products-list'
		},
		"schema": s.mod(marsHydroProductSchema(), (schema)=>{
			s.pushThings({
				options: [
					{
						parser: (val)=>{ return 'grow kit' }
					},
					{
						parser: (val)=>{ return 'grow kits' }
					},
					{
						parser: (val)=>{ return 'grow kit' }
					},
					{
						parser: (val)=>{ return 'grow kits' }
					},
					{
						parser: (val)=>{ return 'kit' }
					},
					{
						parser: (val)=>{ return 'kits' }
					},
					{
						parser: (val)=>{ return 'mars grow kit' }
					},
					{
						parser: (val)=>{ return 'mars grow kits' }
					},
					{
						parser: (val)=>{ return 'mars grow kit' }
					},
					{
						parser: (val)=>{ return 'mars grow kits' }
					},
					{
						parser: (val)=>{ return 'mars kit' }
					},
					{
						parser: (val)=>{ return 'mars kits' }
					},
				],
				list: s.getsmart(
					s.getThing({
						option: {
							path: 'types'
						},
						list: s.getsmart(schema, 'properties', undefined),
						keys: ['path']
					}),
					'html.properties',
					undefined
				)
			})
			return schema
		})
	},
	"accessories": {
		userAgent: "Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/72.0.3626.121 Safari/537.36",
		urls: [["https://www.mars-hydro.com/","accessories","?","limit=25"]],
		createUrl(args){
			var ret = ''
			if(args.self){
				var args = args || {}
				var n = args.n || 0
				args.self.urls[n].forEach(part=>{
					ret += part
				})
			}
			return ret
		},
		list: {
			selector: '#products-list'
		},
		"schema": s.mod(marsHydroProductSchema(), (schema)=>{
			s.pushThings({
				options: [
					{
						parser: (val)=>{ return 'grow accessory' }
					},
					{
						parser: (val)=>{ return 'grow accessories' }
					},
					{
						parser: (val)=>{ return 'grow accessory' }
					},
					{
						parser: (val)=>{ return 'grow accessories' }
					},
					{
						parser: (val)=>{ return 'accessory' }
					},
					{
						parser: (val)=>{ return 'accessories' }
					},
					{
						parser: (val)=>{ return 'mars grow accessory' }
					},
					{
						parser: (val)=>{ return 'mars grow accessories' }
					},
					{
						parser: (val)=>{ return 'mars grow accessory' }
					},
					{
						parser: (val)=>{ return 'mars grow accessories' }
					},
					{
						parser: (val)=>{ return 'mars accessory' }
					},
					{
						parser: (val)=>{ return 'mars accessories' }
					},
				],
				list: s.getsmart(
					s.getThing({
						option: {
							path: 'types'
						},
						list: s.getsmart(schema, 'properties', undefined),
						keys: ['path']
					}),
					'html.properties',
					undefined
				)
			})
			return schema
		})
	}	
}
let toExport =  {
	name: "Mars Hydro",
	pages
}

module.exports = toExport