const secrets = require('secrets')
const mongoose = require('mongoose')
const uuid = require('uuid/v4')
let functions = require('functions')
let createUri = functions['uri.js']
let uri = createUri(secrets.mongoDB)
console.log("Connecting via mongoose to URI "+uri)
const db = {
	mongoose, 
	connection: mongoose.createConnection(
		uri,
		{
			useNewUrlParser: true,
			useUnifiedTopology: true
		}
	),
	uri,
	schemas: [],
	models: {}
}

db.metaSchemaToMongoose = function(args){
	if(args.schema.schema){
		let schema = {}
		args.schema.schema.properties.forEach(property=>{
			schema[property.path] = property.mongoose.schema
		})
		if(schema){
			if(!db.models[args.schema.schema.path]){
				let mongooseSchema = new db.mongoose.Schema(schema)
				db.schemas.push(mongooseSchema)
				let mongooseModel = db.connection.model(args.schema.schema.path, mongooseSchema)
				db.schemas[args.schema.schema.path] = mongooseSchema
				db.models[args.schema.schema.path] = mongooseModel
			}
		}
	}
}
// model test
db.test = function(args){
		var test = new db.models['thing']({
			title: 'hey',
			price: 'nine ninety nine',
			thumbnail: 'lol.jpg'
		})

		test
		.save(err=>{
			if(err) {
				console.error(err)
			}
		})
	}
	// test()
module.exports = function(args){
	var args = args || {}
	if(args.schemas){
		args.schemas.forEach(schema=>{
			db.metaSchemaToMongoose({schema})
		})
	}
	return db
}